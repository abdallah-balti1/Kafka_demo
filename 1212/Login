import React, { useState } from 'react';
import { 
  Box, 
  Button, 
  Container, 
  Paper, 
  Typography, 
  TextField,
  Divider,
  Alert,
  CircularProgress,
  Grid,
  useTheme,
  useMediaQuery
} from '@mui/material';
import { 
  Lock as LockIcon, 
  Person as PersonIcon,
  Visibility,
  VisibilityOff,
  Security as SecurityIcon
} from '@mui/icons-material';

const Login = () => {
  const [loading, setLoading] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const [formData, setFormData] = useState({
    email: '',
    password: ''
  });
  const [error, setError] = useState('');
  
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));

  // Mock login handler - replace with your actual authentication logic
  const handleLogin = async () => {
    setLoading(true);
    setError('');
    
    try {
      // Replace this with your actual authentication logic
      // For now, using the OAuth flow from your original code
      console.log('Initiating OAuth login...');
      
      // Your original OAuth logic would go here
      const CLIENT_ID = (window as any).appConfig?.CLIENT_ID;
      const CLIENT_AUTH_URL = (window as any).appConfig?.CLIENT_AUTH_URL;
      const REDIRECT_URI = (window as any).appConfig?.REDIRECT_URI;
      const SCOOP = (window as any).appConfig?.SCOOP;
      const NONCE = "SS942S5mmLwQHYZ5DG0UJ1cSa";
      
      // Generate your code verifier and challenge here
      // const CODE_VERIFIER = generateCodeVerifier();
      // const CODE_CHALLENGE = generateCodeChallenge(CODE_VERIFIER);
      
      // localStorage.setItem('code_verifier', CODE_VERIFIER);
      // window.location.href = `${CLIENT_AUTH_URL}?response_type=code&client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_mode=query&code_challenge=${CODE_CHALLENGE}&scope=${SCOOP}&code_challenge_method=S256&nonce=${NONCE}`;
      
    } catch (err) {
      setError('Login failed. Please try again.');
    } finally {
      setLoading(false);
    }
  };

  const handleInputChange = (field) => (event) => {
    setFormData(prev => ({
      ...prev,
      [field]: event.target.value
    }));
    if (error) setError('');
  };

  return (
    <Box
      sx={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #00915A 0%, #00A65A 50%, #87CEEB 100%)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        padding: 2
      }}
    >
      <Container maxWidth="sm">
        <Paper
          elevation={24}
          sx={{
            padding: { xs: 3, sm: 5 },
            borderRadius: 3,
            background: 'rgba(255, 255, 255, 0.95)',
            backdropFilter: 'blur(20px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)'
          }}
        >
          {/* Header Section */}
          <Box sx={{ textAlign: 'center', mb: 4 }}>
            <Box
              sx={{
                width: 80,
                height: 80,
                borderRadius: '50%',
                background: 'linear-gradient(45deg, #00915A, #00A65A)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                margin: '0 auto 24px',
                boxShadow: '0 8px 25px rgba(0, 145, 90, 0.3)'
              }}
            >
              <SecurityIcon sx={{ fontSize: 40, color: 'white' }} />
            </Box>
            
            <Typography
              variant="h4"
              sx={{
                fontWeight: 700,
                color: '#00915A',
                mb: 1,
                fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif'
              }}
            >
              BNP Paribas
            </Typography>
            
            <Typography
              variant="h6"
              sx={{
                color: '#666',
                fontWeight: 300,
                mb: 1
              }}
            >
              AI Discovery Platform
            </Typography>
            
            <Typography
              variant="body2"
              sx={{
                color: '#888',
                fontSize: '0.9rem'
              }}
            >
              Secure access to your professional workspace
            </Typography>
          </Box>

          {/* Error Alert */}
          {error && (
            <Alert 
              severity="error" 
              sx={{ 
                mb: 3, 
                borderRadius: 2,
                '& .MuiAlert-icon': {
                  color: '#d32f2f'
                }
              }}
            >
              {error}
            </Alert>
          )}

          {/* Login Form */}
          <Box component="form" onSubmit={(e) => { e.preventDefault(); handleLogin(); }}>
            <TextField
              fullWidth
              label="Professional Email"
              type="email"
              value={formData.email}
              onChange={handleInputChange('email')}
              required
              sx={{ 
                mb: 3,
                '& .MuiOutlinedInput-root': {
                  borderRadius: 2,
                  '&:hover fieldset': {
                    borderColor: '#00915A'
                  },
                  '&.Mui-focused fieldset': {
                    borderColor: '#00915A'
                  }
                },
                '& .MuiInputLabel-root.Mui-focused': {
                  color: '#00915A'
                }
              }}
              InputProps={{
                startAdornment: (
                  <PersonIcon sx={{ color: '#666', mr: 1 }} />
                )
              }}
            />

            <TextField
              fullWidth
              label="Password"
              type={showPassword ? 'text' : 'password'}
              value={formData.password}
              onChange={handleInputChange('password')}
              required
              sx={{ 
                mb: 4,
                '& .MuiOutlinedInput-root': {
                  borderRadius: 2,
                  '&:hover fieldset': {
                    borderColor: '#00915A'
                  },
                  '&.Mui-focused fieldset': {
                    borderColor: '#00915A'
                  }
                },
                '& .MuiInputLabel-root.Mui-focused': {
                  color: '#00915A'
                }
              }}
              InputProps={{
                startAdornment: (
                  <LockIcon sx={{ color: '#666', mr: 1 }} />
                ),
                endAdornment: (
                  <Button
                    onClick={() => setShowPassword(!showPassword)}
                    sx={{ 
                      minWidth: 'auto', 
                      p: 0.5,
                      color: '#666',
                      '&:hover': {
                        backgroundColor: 'transparent',
                        color: '#00915A'
                      }
                    }}
                  >
                    {showPassword ? <VisibilityOff /> : <Visibility />}
                  </Button>
                )
              }}
            />

            {/* Primary Login Button */}
            <Button
              type="submit"
              fullWidth
              variant="contained"
              size="large"
              disabled={loading}
              sx={{
                height: 56,
                borderRadius: 2,
                background: 'linear-gradient(45deg, #00915A, #00A65A)',
                fontWeight: 600,
                fontSize: '1.1rem',
                textTransform: 'none',
                mb: 3,
                boxShadow: '0 4px 15px rgba(0, 145, 90, 0.4)',
                '&:hover': {
                  background: 'linear-gradient(45deg, #007A4D, #00915A)',
                  boxShadow: '0 6px 20px rgba(0, 145, 90, 0.5)'
                },
                '&:disabled': {
                  background: '#ccc'
                }
              }}
            >
              {loading ? (
                <CircularProgress size={24} color="inherit" />
              ) : (
                'Sign In Securely'
              )}
            </Button>

            {/* Divider */}
            <Divider sx={{ my: 3 }}>
              <Typography variant="body2" color="text.secondary">
                or
              </Typography>
            </Divider>

            {/* SSO Button */}
            <Button
              fullWidth
              variant="outlined"
              size="large"
              onClick={handleLogin}
              disabled={loading}
              sx={{
                height: 56,
                borderRadius: 2,
                borderColor: '#00915A',
                color: '#00915A',
                fontWeight: 600,
                fontSize: '1.1rem',
                textTransform: 'none',
                mb: 3,
                '&:hover': {
                  borderColor: '#007A4D',
                  backgroundColor: 'rgba(0, 145, 90, 0.05)',
                  color: '#007A4D'
                }
              }}
            >
              Continue with BNP Paribas SSO
            </Button>
          </Box>

          {/* Footer */}
          <Box sx={{ textAlign: 'center', mt: 4 }}>
            <Typography variant="body2" color="text.secondary" sx={{ mb: 1 }}>
              Having trouble signing in?
            </Typography>
            <Button
              variant="text"
              size="small"
              sx={{
                color: '#00915A',
                textTransform: 'none',
                '&:hover': {
                  backgroundColor: 'rgba(0, 145, 90, 0.05)'
                }
              }}
            >
              Contact IT Support
            </Button>
          </Box>

          {/* Security Notice */}
          <Box
            sx={{
              mt: 4,
              p: 2,
              backgroundColor: 'rgba(0, 145, 90, 0.05)',
              borderRadius: 2,
              border: '1px solid rgba(0, 145, 90, 0.1)'
            }}
          >
            <Typography
              variant="caption"
              sx={{
                color: '#666',
                display: 'block',
                textAlign: 'center',
                lineHeight: 1.4
              }}
            >
              🔒 Your connection is secured with enterprise-grade encryption.
              <br />
              By signing in, you agree to BNP Paribas security policies.
            </Typography>
          </Box>
        </Paper>
      </Container>
    </Box>
  );
};

export default Login;
