import { useState, useEffect } from "react";
import { PiChartLineBold } from "react-icons/pi";
import { PeopleIcon } from "@mui/icons-material/People";
import { WorkIcon } from "@mui/icons-material/Work";
import { InfoIcon } from "@mui/icons-material/Info";
import { decodeToken } from "utils/auth";

export default function Sidebar() {
  const [isExpanded, setIsExpanded] = useState(false);
  const [role, setRole] = useState("string" || undefined);
  const location = { pathname: "/dashboard" }; // Mock location for demo

  useEffect(() => {
    // Mock token check - in real app this would use actual localStorage
    const mockToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9";
    if (mockToken) {
      // Mock decode - in real app would use actual decodeToken
      const dataUser = { role: "admin" };
      setRole(dataUser?.role);
    } else {
      setRole("guest");
    }
  }, []);

  const menuItems = [
    { 
      name: "Dashboard", 
      icon: <PiChartLineBold className="w-6 h-6" />, 
      link: "/home",
      description: "Vue d'ensemble"
    },
    ...(role === "admin" ? [
      { 
        name: "Users", 
        icon: <PeopleIcon className="w-6 h-6" />, 
        link: "/users",
        description: "Gestion utilisateurs"
      },
      { 
        name: "POCs", 
        icon: <WorkIcon className="w-6 h-6" />, 
        link: "/pocs",
        description: "Projets POC"
      },
    ] : []),
    { 
      name: "About", 
      icon: <InfoIcon className="w-6 h-6" />, 
      link: "/about",
      description: "À propos"
    },
  ];

  const isActive = (link) => location.pathname === link;

  if (role === undefined) {
    return (
      <div className="fixed left-0 top-0 h-full w-16 bg-gradient-to-b from-emerald-600 to-emerald-800 animate-pulse shadow-2xl">
        <div className="flex items-center justify-center h-16 border-b border-emerald-500/30">
          <div className="w-8 h-8 bg-emerald-400/20 rounded-lg animate-pulse"></div>
        </div>
      </div>
    );
  }

  return (
    <div 
      className={`fixed left-0 top-0 h-full bg-gradient-to-b from-emerald-600 via-emerald-700 to-emerald-800 text-white shadow-2xl transition-all duration-300 ease-in-out z-50 ${
        isExpanded ? "w-80" : "w-16"
      }`}
      onMouseEnter={() => setIsExpanded(true)}
      onMouseLeave={() => setIsExpanded(false)}
    >
      {/* Header */}
      <div className="flex items-center justify-center h-16 border-b border-emerald-500/30 bg-emerald-800/50">
        <div className="w-10 h-10 bg-white rounded-lg flex items-center justify-center shadow-lg">
          <span className="font-bold text-emerald-700 text-lg">BNP</span>
        </div>
        <div className={`ml-4 transition-all duration-300 ${
          isExpanded ? "opacity-100 w-auto" : "opacity-0 w-0"
        }`}>
          <h1 className="font-bold text-lg text-white whitespace-nowrap">
            BNP Paribas
          </h1>
          <p className="text-emerald-200 text-sm whitespace-nowrap">
            Digital Banking
          </p>
        </div>
      </div>

      {/* Navigation */}
      <nav className="mt-6 px-3">
        <ul className="space-y-2">
          {menuItems.map((item, index) => (
            <li key={index}>
              <a
                href={item.link}
                className={`group flex items-center px-3 py-3 rounded-xl transition-all duration-200 ${
                  isActive(item.link)
                    ? "bg-white text-emerald-700 shadow-lg transform scale-105"
                    : "text-emerald-100 hover:bg-emerald-600/50 hover:text-white hover:shadow-md"
                }`}
              >
                <div className={`flex-shrink-0 transition-transform duration-200 ${
                  isActive(item.link) ? "text-emerald-700" : "text-emerald-200 group-hover:text-white group-hover:scale-110"
                }`}>
                  {item.icon}
                </div>
                
                <div className={`ml-4 transition-all duration-300 ${
                  isExpanded ? "opacity-100 w-auto" : "opacity-0 w-0"
                }`}>
                  <span className="font-medium text-base whitespace-nowrap block">
                    {item.name}
                  </span>
                  <span className={`text-sm whitespace-nowrap block ${
                    isActive(item.link) ? "text-emerald-600" : "text-emerald-200 group-hover:text-emerald-100"
                  }`}>
                    {item.description}
                  </span>
                </div>
              </a>
            </li>
          ))}
        </ul>
      </nav>

      {/* User Profile Section */}
      <div className="absolute bottom-0 left-0 right-0 p-3 border-t border-emerald-500/30 bg-emerald-800/50">
        <div className="flex items-center px-3 py-2">
          <div className="w-8 h-8 bg-emerald-400 rounded-full flex items-center justify-center shadow-lg">
            <span className="font-bold text-emerald-800 text-sm">
              {role === "admin" ? "A" : "U"}
            </span>
          </div>
          <div className={`ml-3 transition-all duration-300 ${
            isExpanded ? "opacity-100 w-auto" : "opacity-0 w-0"
          }`}>
            <p className="font-medium text-white text-sm whitespace-nowrap">
              {role === "admin" ? "Administrateur" : "Utilisateur"}
            </p>
            <p className="text-emerald-200 text-xs whitespace-nowrap">
              {role === "admin" ? "Accès complet" : "Accès limité"}
            </p>
          </div>
        </div>
      </div>

      {/* Expansion indicator */}
      <div className="absolute top-1/2 -right-3 transform -translate-y-1/2">
        <div className="w-6 h-6 bg-emerald-600 rounded-full shadow-lg flex items-center justify-center border-2 border-white">
          <div className={`w-2 h-2 bg-white rounded-full transition-transform duration-300 ${
            isExpanded ? "transform rotate-180" : ""
          }`}></div>
        </div>
      </div>
    </div>
  );
}
