import React, { useState, useEffect } from "react";
import { PiGarageBold } from "react-icons/pi";
import PeopleIcon from "@mui/icons-material/People";
import WorkIcon from "@mui/icons-material/work";
import InfoIcon from "@mui/icons-material/Info";
import { decodeToken } from "utils/auth";
import { getUsers } from "services/users";

export default function Sidebar() {
  const [isExpanded, setIsExpanded] = useState(false);
  const [isAdmin, setIsAdmin] = useState(false);

  useEffect(() => {
    const token = localStorage.getItem("access_token");
    if (token) {
      const dataUser = decodeToken(token);
      const userId = dataUser?.["userId"];

      if (userId) {
        getUsers().then(users => {
          const currentUser = users.find(u => u.userId === userId);
          if (currentUser?.role === "admin") {
            setIsAdmin(true);
          }
        });
      }
    }
  }, []);

  const menuItems = [
    { name: "Dashboard", icon: <PiGarageBold />, link: "/home" },
    ...(isAdmin
      ? [
          { name: "Users", icon: <PeopleIcon />, link: "/users" },
          { name: "POCS", icon: <WorkIcon />, link: "/pocs" },
        ]
      : []),
    { name: "About", icon: <InfoIcon />, link: "/about" },
  ];

  return (
    <div
      className={`fixed left-0 top-0 h-full bg-backsideBar text-greyElementSideBard font-bold shadow-lg transition-all duration-300 ${
        isExpanded ? "w-64" : "w-16"
      }`}
      onMouseEnter={() => setIsExpanded(true)}
      onMouseLeave={() => setIsExpanded(false)}
    >
      <nav className="mt-2 p-2">
        <ul className="space-y-4">
          {menuItems.map((item, index) => (
            <li key={index}>
              <a
                href={item.link}
                className="relative flex items-center p-3 text-lg cursor-pointer rounded transition-all duration-300 hover:bg-gray-700"
              >
                <span className="text-xl">{item.icon}</span>
                <span
                  className={`ml-4 overflow-hidden transition-all duration-300 ${
                    isExpanded
                      ? "opacity-100 w-auto hover:text-white"
                      : "opacity-0 w-0"
                  }`}
                >
                  {item.name}
                </span>
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </div>
  );
}
