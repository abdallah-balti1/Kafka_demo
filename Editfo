import React, { useState, useEffect } from "react";
import { updateUser } from "../services/userService";

type Props = {
  user: {
    userId: string;
    firstName: string;
    lastName: string;
    email: string;
    createdAt: string;
  };
  onClose: () => void;
  onSuccess: () => void;
};

const UserEditModal: React.FC<Props> = ({ user, onClose, onSuccess }) => {
  const [formData, setFormData] = useState({ ...user });
  const [error, setError] = useState("");

  useEffect(() => {
    setFormData({ ...user });
  }, [user]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");
    try {
      await updateUser(formData.userId, formData);
      onSuccess();
      onClose();
    } catch (err) {
      console.error("Erreur mise à jour :", err);
      setError("Échec de la mise à jour.");
    }
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50">
      <div className="bg-white p-6 rounded shadow-lg w-full max-w-md">
        <h2 className="text-xl font-bold mb-4">Modifier l'utilisateur</h2>
        <form onSubmit={handleSubmit} className="space-y-4">
          {error && <p className="text-red-600">{error}</p>}

          <input
            type="text"
            name="userId"
            value={formData.userId}
            readOnly
            className="w-full border p-2 rounded bg-gray-100 cursor-not-allowed"
          />

          <input
            type="text"
            name="firstName"
            placeholder="Prénom"
            value={formData.firstName}
            onChange={handleChange}
            className="w-full border p-2 rounded"
            required
          />

          <input
            type="text"
            name="lastName"
            placeholder="Nom"
            value={formData.lastName}
            onChange={handleChange}
            className="w-full border p-2 rounded"
            required
          />

          <input
            type="email"
            name="email"
            placeholder="Email"
            value={formData.email}
            onChange={handleChange}
            className="w-full border p-2 rounded"
            required
          />

          <input
            type="date"
            name="createdAt"
            value={formData.createdAt}
            onChange={handleChange}
            className="w-full border p-2 rounded"
            required
          />

          <div className="flex justify-end space-x-4 pt-2">
            <button
              type="button"
              onClick={onClose}
              className="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400"
            >
              Annuler
            </button>
            <button
              type="submit"
              className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
            >
              Enregistrer
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default UserEditModal;
