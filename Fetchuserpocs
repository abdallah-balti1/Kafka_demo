// services/pocs.ts
import axiosInstance from "./axiosInstance"; // your axios wrapper
import { User } from "./users"; // if needed

export const assignUserToPoc = async (
  user: User,
  poc: { id: string },
  startUsing: string,
  endUsing: string
): Promise<void> => {
  try {
    // First check if user already has a POC assigned
    const response = await axiosInstance.get(`/manage/pocs/user/${user.userId}`);

    if (response.data && response.data.poc) {
      // If POC already exists, use PUT to update
      await axiosInstance.put("/manage/user/poc", {
        user,
        poc,
        startUsing,
        endUsing,
      });
    } else {
      // If no POC assigned, use POST to create association
      await axiosInstance.post("/manage/user/poc", {
        user,
        poc,
        startUsing,
        endUsing,
      });
    }
  } catch (error: any) {
    // If 404, assume user has no assigned POC, proceed with POST
    if (error.response && error.response.status === 404) {
      await axiosInstance.post("/manage/user/poc", {
        user,
        poc,
        startUsing,
        endUsing,
      });
    } else {
      throw error;
    }
  }
};
