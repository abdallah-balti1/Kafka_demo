import { useState, useEffect } from "react";
import { PiChartLineBold } from "react-icons/pi";
import PeopleIcon from "@mui/icons-material/People";
import WorkIcon from "@mui/icons-material/Work";
import InfoIcon from "@mui/icons-material/Info";
import { decoderToken } from "utils/auth";
import { useLocation, NavLink } from "react-router-dom";
import { motion } from "framer-motion";

export default function Sidebar() {
  const [isExpanded, setIsExpanded] = useState(false);
  const [role, setRole] = useState<string | undefined>(undefined);
  const location = useLocation();

  useEffect(() => {
    const token = localStorage.getItem("access_token");
    if (token) {
      const dataUser = decoderToken(token);
      setRole(dataUser?.role);
    } else {
      setRole("guest");
    }
  }, []);

  const menuItems = [
    { name: "Dashboard", icon: <PiChartLineBold />, link: "/home" },
    ...(role === "admin"
      ? [
          { name: "Users", icon: <PeopleIcon />, link: "/users" },
          { name: "POCs", icon: <WorkIcon />, link: "/pocs" },
        ]
      : []),
    { name: "About", icon: <InfoIcon />, link: "/about" },
  ];

  if (role === undefined) return (
    <div className="fixed left-0 top-0 h-full bg-gray-800 w-16 animate-pulse" />
  );

  return (
    <motion.div
      initial={{ width: 64 }}
      animate={{ width: isExpanded ? 256 : 64 }}
      className="fixed left-0 top-0 h-full bg-gray-800 text-gray-300 font-medium shadow-xl z-50"
      onMouseEnter={() => setIsExpanded(true)}
      onMouseLeave={() => setIsExpanded(false)}
    >
      <nav className="mt-4 p-2">
        <ul className="space-y-2">
          {menuItems.map((item, index) => (
            <li key={index}>
              <NavLink
                to={item.link}
                className={({ isActive }) => 
                  `flex items-center p-3 rounded-lg transition-all duration-200 hover:bg-gray-700 hover:text-white ${
                    isActive ? "bg-gray-700 text-white" : ""
                  }`
                }
              >
                <motion.span 
                  className="text-xl"
                  whileHover={{ scale: 1.1 }}
                >
                  {item.icon}
                </motion.span>
                <motion.span
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ 
                    opacity: isExpanded ? 1 : 0,
                    x: isExpanded ? 0 : -20,
                    display: isExpanded ? "inline-block" : "none"
                  }}
                  className="ml-4 whitespace-nowrap"
                >
                  {item.name}
                </motion.span>
              </NavLink>
            </li>
          ))}
        </ul>
      </nav>
      
      {/* Profile section */}
      <div className="absolute bottom-0 w-full p-4 border-t border-gray-700">
        <div className="flex items-center">
          <div className="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center">
            <span className="text-xs">{(role || 'GU')[0].toUpperCase()}</span>
          </div>
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ 
              opacity: isExpanded ? 1 : 0,
              x: isExpanded ? 0 : -20,
              display: isExpanded ? "inline-block" : "none"
            }}
            className="ml-3"
          >
            <p className="text-sm font-medium">{role}</p>
            <p className="text-xs text-gray-400">User</p>
          </motion.div>
        </div>
      </div>
    </motion.div>
  );
}
