import { useState, useEffect } from "react";
import { PiChartLineBold } from "react-icons/pi";
import PeopleIcon from "@mui/icons-material/People";
import WorkIcon from "@mui/icons-material/Work";
import InfoIcon from "@mui/icons-material/Info";
import { decoderToken } from "utils/auth";
import { useLocation, NavLink } from "react-router-dom";

export default function Sidebar() {
  const [isExpanded, setIsExpanded] = useState(false);
  const [role, setRole] = useState<string | undefined>(undefined);
  const location = useLocation();

  useEffect(() => {
    const token = localStorage.getItem("access_token");
    if (token) {
      const dataUser = decoderToken(token);
      setRole(dataUser?.role);
    } else {
      setRole("guest");
    }
  }, []);

  const menuItems = [
    { name: "Dashboard", icon: <PiChartLineBold />, link: "/home" },
    ...(role === "admin"
      ? [
          { name: "Users", icon: <PeopleIcon />, link: "/users" },
          { name: "POCs", icon: <WorkIcon />, link: "/pocs" },
        ]
      : []),
    { name: "About", icon: <InfoIcon />, link: "/about" },
  ];

  if (role === undefined) return (
    <div className="fixed left-0 top-0 h-full bg-emerald-800 w-16 animate-pulse" />
  );

  return (
    <div
      className={`fixed left-0 top-0 h-full bg-emerald-800 text-emerald-50 font-medium shadow-xl z-50 transition-all duration-300 ${
        isExpanded ? "w-64" : "w-16"
      }`}
      onMouseEnter={() => setIsExpanded(true)}
      onMouseLeave={() => setIsExpanded(false)}
    >
      {/* Logo/Header */}
      <div className="p-4 border-b border-emerald-700 flex items-center">
        <div className="w-8 h-8 rounded bg-emerald-600 flex items-center justify-center">
          <span className="font-bold text-white">L</span>
        </div>
        <span className={`ml-3 font-bold text-lg whitespace-nowrap transition-all duration-300 ${
          isExpanded ? "opacity-100" : "opacity-0 w-0"
        }`}>
          Logo
        </span>
      </div>

      <nav className="mt-2 p-2">
        <ul className="space-y-1">
          {menuItems.map((item, index) => (
            <li key={index}>
              <NavLink
                to={item.link}
                className={({ isActive }) => 
                  `flex items-center p-3 rounded-lg transition-all duration-200 ${
                    isActive 
                      ? "bg-emerald-700 text-white shadow-md" 
                      : "hover:bg-emerald-700/50 hover:text-white"
                  }`
                }
              >
                <span className="text-xl transition-transform duration-200 hover:scale-110">
                  {item.icon}
                </span>
                <span
                  className={`ml-4 whitespace-nowrap transition-all duration-300 ${
                    isExpanded ? "opacity-100" : "opacity-0 w-0"
                  }`}
                >
                  {item.name}
                </span>
              </NavLink>
            </li>
          ))}
        </ul>
      </nav>
      
      {/* Profile section */}
      <div className="absolute bottom-0 w-full p-4 border-t border-emerald-700 bg-emerald-800/90">
        <div className="flex items-center">
          <div className="w-8 h-8 rounded-full bg-emerald-600 flex items-center justify-center">
            <span className="text-xs text-white">{(role || 'GU')[0].toUpperCase()}</span>
          </div>
          <div
            className={`ml-3 transition-all duration-300 overflow-hidden ${
              isExpanded ? "opacity-100 w-auto" : "opacity-0 w-0"
            }`}
          >
            <p className="text-sm font-medium text-white">{role}</p>
            <p className="text-xs text-emerald-200">User Profile</p>
          </div>
        </div>
      </div>
    </div>
  );
}
