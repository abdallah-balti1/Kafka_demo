import React, { useState } from 'react';
import { useUsers } from '@/hooks/useUsers';
import { deleteUser, createUser, updateUser } from '@/services/users';
import { User } from '@/schemas/user';

const emptyUser: Partial<User> = {
  firstName: '',
  lastName: '',
  mail: '',
};

const DataTablePocs: React.FC = () => {
  const { data: users = [], isLoading, isError, refetch } = useUsers();
  const [formData, setFormData] = useState<Partial<User>>(emptyUser);
  const [editingId, setEditingId] = useState<string | null>(null);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      if (editingId) {
        await updateUser(editingId, formData);
      } else {
        await createUser(formData);
      }
      setFormData(emptyUser);
      setEditingId(null);
      refetch();
    } catch (err) {
      console.error("Erreur formulaire :", err);
    }
  };

  const handleEdit = (user: User) => {
    setFormData(user);
    setEditingId(user.userId);
  };

  const handleDelete = async (id: string) => {
    await deleteUser(id);
    refetch();
  };

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold text-center mb-6">Gestion des utilisateurs</h1>

      {/* Formulaire */}
      <form onSubmit={handleSubmit} className="mb-6 bg-gray-100 p-4 rounded shadow">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <input
            type="text"
            name="firstName"
            placeholder="First Name"
            value={formData.firstName || ''}
            onChange={handleChange}
            className="p-2 border rounded"
            required
          />
          <input
            type="text"
            name="lastName"
            placeholder="Last Name"
            value={formData.lastName || ''}
            onChange={handleChange}
            className="p-2 border rounded"
            required
          />
          <input
            type="email"
            name="mail"
            placeholder="Email"
            value={formData.mail || ''}
            onChange={handleChange}
            className="p-2 border rounded"
            required
          />
        </div>
        <button type="submit" className="mt-4 bg-green-600 text-white px-4 py-2 rounded">
          {editingId ? 'Modifier' : 'Ajouter'}
        </button>
        {editingId && (
          <button type="button" className="ml-2 text-sm underline" onClick={() => {
            setEditingId(null);
            setFormData(emptyUser);
          }}>
            Annuler
          </button>
        )}
      </form>

      {/* Tableau */}
      <div className="overflow-x-auto bg-white shadow rounded">
        <table className="min-w-full border border-gray-200">
          <thead className="bg-gray-100">
            <tr>
              <th className="px-4 py-2">Pr√©nom</th>
              <th className="px-4 py-2">Nom</th>
              <th className="px-4 py-2">Email</th>
              <th className="px-4 py-2">Actions</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.userId} className="border-t">
                <td className="px-4 py-2">{user.firstName}</td>
                <td className="px-4 py-2">{user.lastName}</td>
                <td className="px-4 py-2">{user.mail}</td>
                <td className="px-4 py-2 space-x-2">
                  <button className="bg-blue-500 text-white px-3 py-1 rounded" onClick={() => handleEdit(user)}>
                    Modifier
                  </button>
                  <button className="bg-red-500 text-white px-3 py-1 rounded" onClick={() => handleDelete(user.userId)}>
                    Supprimer
                  </button>
                </td>
              </tr>
            ))}
            {users.length === 0 && (
              <tr>
                <td colSpan={4} className="text-center py-4">Aucun utilisateur.</td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default DataTablePocs;
